— Single responsibility: Make sure classes only do one thing and have only
one reason to change.

— Open-closed: You should be able to extend the functionality of a class
without changing how it already works.

— Liskov substitution: Subclasses should be substitutable for their base
classes.

— Interface segregation: Keep your interfaces short with few methods.
Clients only implement what they need.

— Dependency inversion: Depend on abstractions. Don’t depend directly
from one concrete class to another.